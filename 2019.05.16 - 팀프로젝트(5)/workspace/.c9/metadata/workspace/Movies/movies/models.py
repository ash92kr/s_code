{"changed":true,"filter":false,"title":"models.py","tooltip":"/Movies/movies/models.py","value":"from django.db import models\nfrom django.conf import settings\nfrom django.core.validators import MaxValueValidator, MinValueValidator\n\nclass Actor(models.Model):\n    actor_id = models.IntegerField()\n    name = models.CharField(max_length=150)\n    \n    def __str__(self):\n        return self.name\n        \nclass Genre(models.Model):\n    name = models.CharField(max_length=150)\n    \n    def __str__(self):\n        return self.name\n\nclass Movie(models.Model):\n    movie_name = models.TextField()\n    time = models.IntegerField()\n    year = models.IntegerField()\n    nation = models.TextField()\n    director = models.TextField()\n    company = models.TextField()\n    grade = models.TextField()\n    actor1 = models.IntegerField(blank=True)\n    actor2 = models.IntegerField(blank=True)\n    actor3 = models.IntegerField(blank=True)\n    poster_url = models.TextField()\n    link_url = models.TextField()\n    user_rating = models.IntegerField()\n    description = models.TextField()\n    film_url = models.TextField()\n    genre = models.ForeignKey(Genre, on_delete=models.CASCADE)\n    like_users = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name='like_movies', blank=True)\n    # score_users = models.ManyToManyField(settings.AUTH_USER_MODEL, related_name='score_movies', through='Comment')\n    \n    def __str__(self):\n        return self.actor1\n                                \nclass Comment(models.Model):\n    user = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)\n    movie = models.ForeignKey(Movie, on_delete=models.CASCADE)\n    content = models.CharField(max_length=140)\n    score = models.IntegerField(validators=[MinValueValidator(0), MaxValueValidator(10)])\n    \n    def __str__(self):\n        return self.content\n","undoManager":{"mark":0,"position":1,"stack":[[{"start":{"row":8,"column":22},"end":{"row":8,"column":30},"action":"remove","lines":["        "],"id":2},{"start":{"row":8,"column":22},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":9,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "],"id":3},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]},{"start":{"row":2,"column":71},"end":{"row":2,"column":72},"action":"remove","lines":[" "]}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":4,"column":26},"end":{"row":4,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":127,"mode":"ace/mode/python"}},"timestamp":1558000095532}